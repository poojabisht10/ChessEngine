;(function () {
  function throttle (f, interval, scope) {
    var handleTimeout = function () {
    var fire = function () {
    return function (_args) {
  // function debounce (f, interval, scope) {
  //   return function (_args) {
  //     timeout = window.setTimeout(function () {
  function uuid () {
    return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function (c) {
  function deepCopy (thing) {
  function parseSemVer (version) {
  function validSemanticVersion (version, minimum) {
  function interpolateTemplate (str, obj) {
  function isString (s) {
  function isFunction (f) {
    return typeof f === 'function'
  function isInteger (n) {
  function validAnimationSpeed (speed) {
  function validThrottleRate (rate) {
  function validMove (move) {
  function validSquare (square) {
  function validPieceCode (code) {
  function validFen (fen) {
  function validPositionObject (pos) {
  function isTouchDevice () {
  function validJQueryVersion () {
  function fenToPieceCode (piece) {
  function pieceCodeToFen (piece) {
  function fenToObj (fen) {
  function objToFen (obj) {
  function squeezeFenEmptySquares (fen) {
  function expandFenEmptySquares (fen) {
  function squareDistance (squareA, squareB) {
  function findClosestPiece (position, piece, square) {
  function createRadius (square) {
    squares.sort(function (a, b) {
  function calculatePositionFromMoves (position, moves) {
  function buildContainerHTML (hasSparePieces) {
  function expandConfigArgumentShorthand (config) {
  function expandConfig (config) {
  function checkJQuery () {
  function checkContainerArg (containerElOrString) {
  function constructor (containerElOrString, config) {
    function error (code, msg, obj) {
          typeof console.log === 'function'
      // custom function
    function setInitialState () {
    function calculateSquareSize () {
    function createElIds () {
    function buildBoardHTML (orientation) {
    function buildPieceImgSrc (piece) {
    function buildPieceHTML (piece, hidden, id) {
    function buildSparePiecesHTML (color) {
    function animateSquareToSquare (src, dest, piece, completeFn) {
      function onFinishAnimation1 () {
        // run complete function
    function animateSparePieceToSquare (piece, dest, completeFn) {
      function onFinishAnimation2 () {
        // run complete function
    function doAnimations (animations, oldPos, newPos) {
      function onFinishAnimation3 () {
        // run their onMoveEnd function
    function calculateAnimations (pos1, pos2) {
    function drawPositionInstant () {
    function drawBoard () {
    function setCurrentPosition (position) {
      // run their onChange function
    function isXYOnSquare (x, y) {
    function captureSquareOffsets () {
    function removeSquareHighlights () {
    function snapbackDraggedPiece () {
      function complete () {
        // run their onSnapbackEnd function
    function trashDraggedPiece () {
    function dropDraggedPieceOnSquare (square) {
      function onAnimationComplete () {
        // execute their onSnapEnd function
    function beginDraggingPiece (source, piece, x, y) {
      // run their custom onDragStart function
      // their custom onDragStart function can cancel drag start
    function updateDraggedPiece (x, y) {
    function stopDraggedPiece (location) {
      // run their onDrop function, which can potentially change the drop action
    widget.clear = function (useAnimation) {
    widget.destroy = function () {
    widget.fen = function () {
    widget.flip = function () {
    widget.move = function () {
        // any "false" to this function means no animations
    widget.orientation = function (arg) {
    widget.position = function (position, useAnimation) {
    widget.resize = function () {
    widget.start = function (useAnimation) {
    function stopDefault (evt) {
    function mousedownSquare (evt) {
    function touchstartSquare (e) {
    function mousedownSparePiece (evt) {
    function touchstartSparePiece (e) {
    function mousemoveWindow (evt) {
    function touchmoveWindow (evt) {
    function mouseupWindow (evt) {
    function touchendWindow (evt) {
    function mouseenterSquare (evt) {
      // exit if they did not provide a onMouseoverSquare function
      // execute their function
    function mouseleaveSquare (evt) {
      // exit if they did not provide an onMouseoutSquare function
      // execute their function
    function addEvents () {
    function initDOM () {
  // expose util functions
